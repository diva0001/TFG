/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Proyecto;

import Util.Hormiga;
import Util.LectorDatos;
import Util.InterfazParametrosManager;
import Algoritmos.Algoritmo;
import Util.InterfazParametrosManagerLinKerninghan;
import Util.InterfazParametrosManagerSCH;
import Util.InterfazParametrosManagerSHMM;
import Util.InterfazParametrosManagerSHMP;
import Util.TipoAlgoritmo;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;

/**
 *
 * @author iesdi
 */
public final class Interfaz extends javax.swing.JFrame {

    private String algoritmoSeleccionado;
    private String conjuntoDatos;
    private String solucion;
    private LectorDatos datosCiudades;
    private ArrayList<Integer> solucionEncontrada;
    private InterfazParametrosManager parametrosConfiguracion;
    private ExecutorService ejecutor;
    private Hormiga hormiga;
    private JPanel panel;
    private StringBuilder log;
    private CountDownLatch cdl;
    private Long semilla;
    private final TipoAlgoritmo tipoAlgoritmo;
    private final Map<String, InterfazParametrosManager> lectores;

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        algoritmoSeleccionado = null;
        conjuntoDatos = null;
        solucion = null;
        datosCiudades = null;
        solucionEncontrada = null;
        parametrosConfiguracion = null;
        tipoAlgoritmo = TipoAlgoritmo.getInstancia();
        ejecutor = null;
        log = null;
        cdl = null;
        hormiga = null;
        panel = null;
        semilla = null;
        lectores = new HashMap();
        lectores.put("SCH", new InterfazParametrosManagerSCH(this));
        lectores.put("SHMM", new InterfazParametrosManagerSHMM(this));
        lectores.put("SHMP", new InterfazParametrosManagerSHMP(this));
        lectores.put("Lin-Kerninghan", new InterfazParametrosManagerLinKerninghan(this));
        initComponents();
        jTextField11.setVisible(false);
        jTextField14.setVisible(false);
        jTextField18.setVisible(false);
        jTextField26.setVisible(false);
        jTextField27.setVisible(false);
        jTextField21.setVisible(false);
        jTextField31.setVisible(false);
        jTextField35.setVisible(false);
        jTextField39.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        pantallaInicial = new javax.swing.JPanel();
        btnEjecutar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        panelVacio = new javax.swing.JPanel();
        parametrosSCH = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jTextField35 = new javax.swing.JTextField();
        jLabel84 = new javax.swing.JLabel();
        parametrosSHMM = new javax.swing.JPanel();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField24 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        checkbox1 = new java.awt.Checkbox();
        jTextField19 = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        checkbox2 = new java.awt.Checkbox();
        jTextField25 = new javax.swing.JTextField();
        jTextField26 = new javax.swing.JTextField();
        jTextField27 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jTextField39 = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        parametrosSHMP = new javax.swing.JPanel();
        jTextField15 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jTextField28 = new javax.swing.JTextField();
        jTextField29 = new javax.swing.JTextField();
        jTextField30 = new javax.swing.JTextField();
        jTextField31 = new javax.swing.JTextField();
        jTextField32 = new javax.swing.JTextField();
        jTextField33 = new javax.swing.JTextField();
        checkbox3 = new java.awt.Checkbox();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jTextField34 = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        parametrosLinKerninghan = new javax.swing.JPanel();
        jTextField36 = new javax.swing.JTextField();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jTextField37 = new javax.swing.JTextField();
        jTextField38 = new javax.swing.JTextField();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        desplegable = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        datos = new javax.swing.JButton();
        cargarSolucion = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        pantallaEjecucion = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        detenerEjecucion = new javax.swing.JButton();
        pantallaVisualizacion = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(231, 231, 231));
        setResizable(false);

        jPanel6.setMinimumSize(new java.awt.Dimension(1405, 700));
        jPanel6.setPreferredSize(new java.awt.Dimension(1400, 725));
        jPanel6.setLayout(new java.awt.CardLayout());

        pantallaInicial.setBackground(new java.awt.Color(220, 220, 220));
        pantallaInicial.setMaximumSize(new java.awt.Dimension(10, 10));
        pantallaInicial.setMinimumSize(new java.awt.Dimension(1405, 700));
        pantallaInicial.setPreferredSize(new java.awt.Dimension(1405, 700));
        pantallaInicial.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnEjecutar.setBackground(new java.awt.Color(180, 180, 180));
        btnEjecutar.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        btnEjecutar.setForeground(new java.awt.Color(0, 0, 0));
        btnEjecutar.setText("Ejecutar");
        btnEjecutar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEjecutar.setEnabled(false);
        btnEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarActionPerformed(evt);
            }
        });
        pantallaInicial.add(btnEjecutar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1283, 650, 114, 36));

        jPanel3.setBackground(new java.awt.Color(220, 220, 220));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setMinimumSize(new java.awt.Dimension(295, 231));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Parámetros de configuración");

        jPanel5.setBackground(new java.awt.Color(220, 220, 220));
        jPanel5.setLayout(new java.awt.CardLayout());

        panelVacio.setBackground(new java.awt.Color(220, 220, 220));
        panelVacio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel5.add(panelVacio, "card6");

        parametrosSCH.setBackground(new java.awt.Color(220, 220, 220));
        parametrosSCH.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Iteraciones");
        parametrosSCH.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Segundos de ejecución");
        parametrosSCH.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Tamaño de la población");
        parametrosSCH.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 150, -1, -1));

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("α");
        parametrosSCH.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, -1, -1));

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("β");
        parametrosSCH.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, -1, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("q0");
        parametrosSCH.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 110, -1, -1));

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Actualización global de feromona");
        parametrosSCH.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 30, -1, -1));

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Actualización local de feromona");
        parametrosSCH.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 70, -1, -1));

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Semilla");
        parametrosSCH.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 150, -1, -1));

        jTextField1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 100, 80, 30));

        jTextField2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 80, 30));

        jTextField3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField3KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 80, 30));

        jTextField4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 140, 80, 30));

        jTextField5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField5KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, 80, 30));

        jTextField6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField6KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 60, 80, 30));

        jTextField7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField7KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 100, 80, 30));

        jTextField8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField8KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 20, 80, 30));

        jTextField9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField9.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField9KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 60, 80, 30));

        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 85, -1, 30));

        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 45, -1, 30));

        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, -1, 30));

        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 130, -1, 30));

        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 5, -1, 30));

        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 45, -1, 30));

        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 85, -1, 30));

        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 5, -1, 30));

        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 45, -1, 30));

        jTextField10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField10.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField10KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 140, 80, 30));

        jLabel22.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("Feromona inicial");
        parametrosSCH.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 110, -1, -1));

        jLabel23.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 125, -1, 30));

        jComboBox1.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox1.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mejor global", "Mejor iteración", "Ambas" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        parametrosSCH.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 102, 140, 30));

        jLabel24.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        parametrosSCH.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, -1, -1));

        jLabel31.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        parametrosSCH.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jTextField11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField11.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField11KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 140, 80, 30));

        jLabel32.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel83.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel83.setForeground(new java.awt.Color(0, 0, 0));
        jLabel83.setText("Hormiga que aporta feromona");
        parametrosSCH.add(jLabel83, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jTextField35.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField35.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField35.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField35KeyReleased(evt);
            }
        });
        parametrosSCH.add(jTextField35, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 140, 80, 30));

        jLabel84.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSCH.add(jLabel84, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, -1, -1));

        jPanel5.add(parametrosSCH, "card3");

        parametrosSHMM.setBackground(new java.awt.Color(220, 220, 220));
        parametrosSHMM.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField12KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField12, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 80, 25));

        jTextField13.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField13KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, 80, 25));

        jTextField14.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField14KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField14, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 145, 80, 25));

        jTextField16.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField16KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField16, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, 80, 25));

        jTextField17.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField17KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField17, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 50, 80, 25));

        jTextField18.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField18KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField18, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 145, 80, 25));

        jTextField20.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField20KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField20, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 20, 80, 25));

        jTextField21.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField21KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField21, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 145, 80, 25));

        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("α");
        parametrosSHMM.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 25, -1, -1));

        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setText("β");
        parametrosSHMM.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 55, -1, -1));

        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setText("Semilla");
        parametrosSHMM.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 85, -1, -1));

        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setText("Actualización de feromona");
        parametrosSHMM.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 25, -1, -1));

        jLabel38.setForeground(new java.awt.Color(0, 0, 0));
        parametrosSHMM.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 85, -1, -1));

        jLabel41.setForeground(new java.awt.Color(0, 0, 0));
        jLabel41.setText("Iteraciones");
        parametrosSHMM.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 25, -1, -1));

        jLabel42.setForeground(new java.awt.Color(0, 0, 0));
        jLabel42.setText("Pbest");
        parametrosSHMM.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, -1, -1));

        jLabel43.setForeground(new java.awt.Color(0, 0, 0));
        jLabel43.setText("Hormiga que aporta feromona");
        parametrosSHMM.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 115, -1, -1));

        jLabel44.setForeground(new java.awt.Color(0, 0, 0));
        jLabel44.setText("Segundos de ejecución");
        parametrosSHMM.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 55, -1, -1));

        jComboBox2.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox2.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mejor global", "Mejor iteración", "Ambas" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        parametrosSHMM.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, 140, 30));

        jTextField24.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField24.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField24KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField24, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 80, 25));

        jLabel45.setForeground(new java.awt.Color(0, 0, 0));
        parametrosSHMM.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        checkbox1.setLabel("Suavizado de feromona");
        checkbox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox1MouseClicked(evt);
            }
        });
        parametrosSHMM.add(checkbox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 85, -1, -1));

        jTextField19.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField19.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField19KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField19, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 80, 80, 25));

        jLabel46.setForeground(new java.awt.Color(0, 0, 0));
        parametrosSHMM.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, -1, -1));

        checkbox2.setLabel("Reinicialización si estancamiento");
        checkbox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox2MouseClicked(evt);
            }
        });
        parametrosSHMM.add(checkbox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 115, -1, -1));

        jTextField25.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField25KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField25, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 50, 80, 25));

        jTextField26.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField26.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField26KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField26, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 80, 80, 25));

        jTextField27.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField27.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField27KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField27, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 110, 80, 25));

        jLabel47.setForeground(new java.awt.Color(0, 0, 0));
        jLabel47.setText("Tamaño de la población");
        parametrosSHMM.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 55, -1, -1));

        jLabel48.setForeground(new java.awt.Color(0, 0, 0));
        parametrosSHMM.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 115, -1, -1));

        jLabel49.setForeground(new java.awt.Color(0, 0, 0));
        parametrosSHMM.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 150, -1, -1));

        jLabel35.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 135, -1, -1));

        jLabel39.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel40.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel50.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel51.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 135, -1, -1));

        jLabel52.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, -1, -1));

        jLabel53.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, -1, -1));

        jLabel54.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, -1, -1));

        jLabel55.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 135, -1, -1));

        jLabel56.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 10, -1, -1));

        jLabel57.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 40, -1, -1));

        jLabel58.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 70, -1, -1));

        jLabel59.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 105, -1, -1));

        jTextField39.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField39.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField39.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField39KeyReleased(evt);
            }
        });
        parametrosSHMM.add(jTextField39, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 145, 80, 25));

        jLabel91.setForeground(new java.awt.Color(0, 0, 0));
        parametrosSHMM.add(jLabel91, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, -1, -1));

        jLabel92.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel92.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMM.add(jLabel92, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, -1, -1));

        jPanel5.add(parametrosSHMM, "card4");

        parametrosSHMP.setBackground(new java.awt.Color(220, 220, 220));
        parametrosSHMP.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField15.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField15.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField15KeyReleased(evt);
            }
        });
        parametrosSHMP.add(jTextField15, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 80, 30));

        jTextField22.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField22.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField22KeyReleased(evt);
            }
        });
        parametrosSHMP.add(jTextField22, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 80, 30));

        jTextField23.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField23.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField23KeyReleased(evt);
            }
        });
        parametrosSHMP.add(jTextField23, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 80, 30));

        jTextField28.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField28.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField28.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField28KeyReleased(evt);
            }
        });
        parametrosSHMP.add(jTextField28, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 140, 80, 30));

        jTextField29.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField29.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField29.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField29KeyReleased(evt);
            }
        });
        parametrosSHMP.add(jTextField29, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 20, 80, 30));

        jTextField30.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField30.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField30.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField30KeyReleased(evt);
            }
        });
        parametrosSHMP.add(jTextField30, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 100, 80, 30));

        jTextField31.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField31.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField31.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField31KeyReleased(evt);
            }
        });
        parametrosSHMP.add(jTextField31, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 140, 80, 30));

        jTextField32.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField32.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField32KeyReleased(evt);
            }
        });
        parametrosSHMP.add(jTextField32, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 20, 80, 30));

        jTextField33.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField33.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField33.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField33KeyReleased(evt);
            }
        });
        parametrosSHMP.add(jTextField33, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 60, 80, 30));

        checkbox3.setLabel("Reinicialización si estancamiento");
        checkbox3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkbox3MouseClicked(evt);
            }
        });
        parametrosSHMP.add(checkbox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 110, -1, -1));

        jLabel60.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(0, 0, 0));
        jLabel60.setText("Actualización de feromona");
        parametrosSHMP.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 30, -1, -1));

        jLabel61.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(0, 0, 0));
        jLabel61.setText("Probabilidad de mutación");
        parametrosSHMP.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 70, -1, -1));

        jLabel62.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(0, 0, 0));
        parametrosSHMP.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 150, -1, -1));

        jLabel63.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(0, 0, 0));
        jLabel63.setText("α");
        parametrosSHMP.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 30, 10, -1));

        jLabel64.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(0, 0, 0));
        jLabel64.setText("β");
        parametrosSHMP.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, 10, -1));

        jLabel65.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(0, 0, 0));
        jLabel65.setText("Tamaño de la población");
        parametrosSHMP.add(jLabel65, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel66.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(0, 0, 0));
        jLabel66.setText("Iteraciones");
        parametrosSHMP.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jLabel67.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(0, 0, 0));
        jLabel67.setText("Semilla");
        parametrosSHMP.add(jLabel67, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 110, -1, -1));

        jLabel68.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(0, 0, 0));
        jLabel68.setText("Segundos de ejecución");
        parametrosSHMP.add(jLabel68, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jTextField34.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField34.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField34.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField34KeyReleased(evt);
            }
        });
        parametrosSHMP.add(jTextField34, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 60, 80, 30));

        jLabel69.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(0, 0, 0));
        jLabel69.setText("Feromona inicial");
        parametrosSHMP.add(jLabel69, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 150, -1, -1));

        jLabel70.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMP.add(jLabel70, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 130, -1, -1));

        jLabel71.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMP.add(jLabel71, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel72.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMP.add(jLabel72, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel73.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMP.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel74.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMP.add(jLabel74, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, -1, -1));

        jLabel75.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMP.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, -1, -1));

        jLabel76.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMP.add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 90, -1, -1));

        jLabel77.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMP.add(jLabel77, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, -1, -1));

        jLabel78.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMP.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 10, -1, -1));

        jLabel79.setForeground(new java.awt.Color(255, 0, 0));
        parametrosSHMP.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 50, -1, -1));

        jPanel5.add(parametrosSHMP, "card5");

        parametrosLinKerninghan.setBackground(new java.awt.Color(220, 220, 220));
        parametrosLinKerninghan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField36.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField36.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField36.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField36KeyReleased(evt);
            }
        });
        parametrosLinKerninghan.add(jTextField36, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 80, 30));

        jLabel85.setForeground(new java.awt.Color(255, 0, 0));
        jLabel85.setText("jLabel70");
        parametrosLinKerninghan.add(jLabel85, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel86.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel86.setForeground(new java.awt.Color(0, 0, 0));
        jLabel86.setText("Iteraciones");
        parametrosLinKerninghan.add(jLabel86, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jLabel87.setForeground(new java.awt.Color(255, 0, 0));
        jLabel87.setText("jLabel70");
        parametrosLinKerninghan.add(jLabel87, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel88.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel88.setForeground(new java.awt.Color(0, 0, 0));
        jLabel88.setText("Segundos de ejecución");
        parametrosLinKerninghan.add(jLabel88, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jTextField37.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField37.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField37.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField37KeyReleased(evt);
            }
        });
        parametrosLinKerninghan.add(jTextField37, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 80, 30));

        jTextField38.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTextField38.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField38.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField38KeyReleased(evt);
            }
        });
        parametrosLinKerninghan.add(jTextField38, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 80, 30));

        jLabel89.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel89.setForeground(new java.awt.Color(0, 0, 0));
        jLabel89.setText("Semilla");
        parametrosLinKerninghan.add(jLabel89, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel90.setForeground(new java.awt.Color(255, 0, 0));
        jLabel90.setText("jLabel70");
        parametrosLinKerninghan.add(jLabel90, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jPanel5.add(parametrosLinKerninghan, "card2");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(443, 443, 443)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pantallaInicial.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 1388, -1));

        jPanel2.setBackground(new java.awt.Color(220, 220, 220));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 17)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Algoritmo");

        desplegable.setBackground(new java.awt.Color(255, 255, 255));
        desplegable.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        desplegable.setForeground(new java.awt.Color(0, 0, 0));
        desplegable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el algoritmo...", "SCH", "SHMM", "SHMP", "Lin-Kerninghan" }));
        desplegable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        desplegable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desplegableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1172, 1172, 1172))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(19, 19, 19)
                .addComponent(desplegable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pantallaInicial.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 1388, 180));

        jPanel1.setBackground(new java.awt.Color(220, 220, 220));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        datos.setBackground(new java.awt.Color(180, 180, 180));
        datos.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        datos.setForeground(new java.awt.Color(0, 0, 0));
        datos.setText("Datos");
        datos.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        datos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        datos.setDefaultCapable(false);
        datos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datosActionPerformed(evt);
            }
        });

        cargarSolucion.setBackground(new java.awt.Color(180, 180, 180));
        cargarSolucion.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        cargarSolucion.setForeground(new java.awt.Color(0, 0, 0));
        cargarSolucion.setText("Cargar solución");
        cargarSolucion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        cargarSolucion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cargarSolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarSolucionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datos, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cargarSolucion, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargarSolucion, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );

        pantallaInicial.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 1388, -1));

        jLabel1.setBackground(new java.awt.Color(220, 220, 220));
        jLabel1.setFont(new java.awt.Font("Dialog", 0, 60)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(90, 102, 110));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CONSTRUCTIVOS");
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setMaximumSize(new java.awt.Dimension(314, 204));
        pantallaInicial.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 70, 1394, 70));

        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        pantallaInicial.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jLabel82.setBackground(new java.awt.Color(220, 220, 220));
        jLabel82.setFont(new java.awt.Font("Dialog", 0, 60)); // NOI18N
        jLabel82.setForeground(new java.awt.Color(90, 102, 110));
        jLabel82.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel82.setText("MÉTODOS METAHEURÍSTICOS");
        jLabel82.setToolTipText("");
        jLabel82.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel82.setMaximumSize(new java.awt.Dimension(314, 204));
        pantallaInicial.add(jLabel82, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 6, 1394, 70));

        jPanel6.add(pantallaInicial, "card2");

        pantallaEjecucion.setBackground(new java.awt.Color(220, 220, 220));
        pantallaEjecucion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(220, 220, 220));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(new java.awt.CardLayout());

        jPanel9.setBackground(new java.awt.Color(220, 220, 220));
        jPanel9.setPreferredSize(new java.awt.Dimension(1388, 98));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel29.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel29MouseClicked(evt);
            }
        });
        jPanel9.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 25, -1, -1));

        jLabel30.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jPanel9.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jPanel4.add(jPanel9, "card2");

        jPanel10.setBackground(new java.awt.Color(220, 220, 220));
        jPanel10.setPreferredSize(new java.awt.Dimension(1388, 98));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel26.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jPanel10.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel27.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });
        jPanel10.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 57, -1, -1));

        jLabel28.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 0));
        jPanel10.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jPanel4.add(jPanel10, "card3");

        pantallaEjecucion.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1388, 130));

        detenerEjecucion.setBackground(new java.awt.Color(180, 180, 180));
        detenerEjecucion.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        detenerEjecucion.setForeground(new java.awt.Color(0, 0, 0));
        detenerEjecucion.setText("Detener");
        detenerEjecucion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        detenerEjecucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detenerEjecucionActionPerformed(evt);
            }
        });
        pantallaEjecucion.add(detenerEjecucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(1227, 650, 170, 36));

        jPanel6.add(pantallaEjecucion, "card3");

        pantallaVisualizacion.setBackground(new java.awt.Color(220, 220, 220));
        pantallaVisualizacion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel11.setBackground(new java.awt.Color(220, 220, 220));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.setPreferredSize(new java.awt.Dimension(1388, 98));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel80.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel80.setForeground(new java.awt.Color(0, 0, 0));
        jLabel80.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel80.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel80MouseClicked(evt);
            }
        });
        jPanel11.add(jLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 25, -1, -1));

        jLabel81.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel81.setForeground(new java.awt.Color(0, 0, 0));
        jPanel11.add(jLabel81, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        pantallaVisualizacion.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 10, 1388, 130));

        btnVolver.setBackground(new java.awt.Color(180, 180, 180));
        btnVolver.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(0, 0, 0));
        btnVolver.setText("Volver");
        btnVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        pantallaVisualizacion.add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(1227, 650, 170, 36));

        jPanel6.add(pantallaVisualizacion, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 1408, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 698, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void guardarFichero() {
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showSaveDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                PdfWriter writer = new PdfWriter(file.getAbsolutePath() + ".pdf");

                PdfDocument pdfDocument = new PdfDocument(writer);

                Document document = new Document(pdfDocument);

                document.add(new Paragraph(log.toString()));

                document.close();

            } catch (Exception e) {
            }
        }
    }

    private class Panel extends JPanel {

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);

            Graphics2D g2d = (Graphics2D) g;

            int panelWidth = getWidth();
            int panelHeight = getHeight();

            double[][] ciudades = datosCiudades.getCiudades();

            double maxX = Arrays.stream(ciudades).mapToDouble(coords -> coords[0]).max().orElse(0);
            double minX = Arrays.stream(ciudades).mapToDouble(coords -> coords[0]).min().orElse(Double.POSITIVE_INFINITY);
            double maxY = Arrays.stream(ciudades).mapToDouble(coords -> coords[1]).max().orElse(0);
            double minY = Arrays.stream(ciudades).mapToDouble(coords -> coords[1]).min().orElse(Double.POSITIVE_INFINITY);

            if (hormiga != null) {
                solucionEncontrada = hormiga.getSolucion();
            }

            g2d.setColor(Color.BLUE);

            for (int i = 0; i < ciudades.length; i++) {
                int x = (int) (((ciudades[i][0] - minX) / (maxX - minX)) * (panelWidth - 15 - 15) + 15);
                int y = (int) (((ciudades[i][1] - minY) / (maxY - minY)) * (panelHeight - 15 - 15) + 15);
                if (solucionEncontrada != null && i + 1 == solucionEncontrada.get(0) + 1) {
                    g2d.setColor(Color.GREEN);
                }
                g2d.fillOval(x, y, 10, 10);
                g2d.setColor(Color.BLACK);
                g2d.drawString(String.valueOf(i + 1), x, y - 5);
                g2d.setColor(Color.BLUE);
            }

            if (solucionEncontrada != null) {
                int offsetX = 4;
                int offsetY = 4;
                g2d.setColor(Color.RED);
                for (int i = 0; i < solucionEncontrada.size(); i++) {
                    int x1 = (int) (((ciudades[solucionEncontrada.get(i)][0] + offsetX - minX) / (maxX - minX)) * (panelWidth - 15 - 15) + 15);
                    int y1 = (int) (((ciudades[solucionEncontrada.get(i)][1] + offsetY - minY) / (maxY - minY)) * (panelHeight - 15 - 15) + 15);
                    int x2 = (int) (((ciudades[solucionEncontrada.get((i + 1) % solucionEncontrada.size())][0] + offsetX - minX) / (maxX - minX)) * (panelWidth - 15 - 15) + 15);
                    int y2 = (int) (((ciudades[solucionEncontrada.get((i + 1) % solucionEncontrada.size())][1] + offsetY - minY) / (maxY - minY)) * (panelHeight - 15 - 15) + 15);
                    g2d.drawLine(x1, y1, x2, y2);
                }
            }

        }

    }

    private void btnEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEjecutarActionPerformed

        try {
            Algoritmo algoritmo = tipoAlgoritmo.getAlgoritmo(algoritmoSeleccionado);
            
            algoritmo.setParametros(parametrosConfiguracion);

            algoritmo.setDatos(datosCiudades);

            algoritmo.setSemilla(semilla);

            algoritmo.setInterfaz(this);

            cdl = new CountDownLatch(1);

            algoritmo.setCdl(cdl);

            algoritmo.inicializarAtributos();

            ejecutor = Executors.newSingleThreadExecutor();
            
            dibujarPuntos();

            ejecutor.execute(algoritmo);

            pantallaInicial.setVisible(false);

            pantallaEjecucion.setVisible(true);

            jPanel9.setVisible(false);

            jPanel10.setVisible(true);

            String rutaRelativa = conjuntoDatos.substring(conjuntoDatos.lastIndexOf("\\") + 1, conjuntoDatos.length());

            jLabel26.setText("Ejecutando " + algoritmoSeleccionado + " con " + rutaRelativa + "...");
        } catch (CloneNotSupportedException ex) {
        }

    }//GEN-LAST:event_btnEjecutarActionPerformed

    public void mostrarParametrosSCH() {
        jComboBox1.setSelectedIndex(0);
        panelVacio.setVisible(false);
        parametrosSHMM.setVisible(false);
        parametrosSHMP.setVisible(false);
        parametrosLinKerninghan.setVisible(false);
        parametrosSCH.setVisible(true);
    }

    public void mostrarParametrosSHMM() {
        jComboBox1.setSelectedIndex(0);
        checkbox1.setState(false);
        jTextField26.setVisible(false);
        jTextField27.setVisible(false);
        jTextField21.setVisible(false);
        checkbox2.setState(false);
        jTextField18.setVisible(false);
        panelVacio.setVisible(false);
        parametrosSCH.setVisible(false);
        parametrosSHMP.setVisible(false);
        parametrosLinKerninghan.setVisible(false);
        parametrosSHMM.setVisible(true);
    }

    public void mostrarParametrosSHMP() {
        checkbox3.setState(false);
        jTextField31.setVisible(false);
        panelVacio.setVisible(false);
        parametrosSCH.setVisible(false);
        parametrosSHMM.setVisible(false);
        parametrosLinKerninghan.setVisible(false);
        parametrosSHMP.setVisible(true);
    }

    public void mostrarParametrosLinKerninghan() {
        panelVacio.setVisible(false);
        parametrosSCH.setVisible(false);
        parametrosSHMM.setVisible(false);
        parametrosSHMP.setVisible(false);
        parametrosLinKerninghan.setVisible(true);
    }

    private void desplegableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desplegableActionPerformed
        if (desplegable.getSelectedIndex() != 0) {
            algoritmoSeleccionado = (String) desplegable.getSelectedItem();
            semilla = null;
            jLabel13.setText("");
            jLabel14.setText("");
            jLabel15.setText("");
            jLabel16.setText("");
            jLabel17.setText("");
            jLabel18.setText("");
            jLabel19.setText("");
            jLabel20.setText("");
            jLabel21.setText("");
            jLabel23.setText("");
            jLabel32.setText("");
            jLabel84.setText("");
            jLabel35.setText("");
            jLabel39.setText("");
            jLabel40.setText("");
            jLabel50.setText("");
            jLabel51.setText("");
            jLabel52.setText("");
            jLabel53.setText("");
            jLabel54.setText("");
            jLabel55.setText("");
            jLabel56.setText("");
            jLabel57.setText("");
            jLabel58.setText("");
            jLabel59.setText("");
            jLabel70.setText("");
            jLabel71.setText("");
            jLabel72.setText("");
            jLabel73.setText("");
            jLabel74.setText("");
            jLabel75.setText("");
            jLabel76.setText("");
            jLabel77.setText("");
            jLabel78.setText("");
            jLabel79.setText("");
            jLabel85.setText("");
            jLabel87.setText("");
            jLabel90.setText("");
            jLabel92.setText("");
            leerParametros(true);
            if (conjuntoDatos != null) {
                btnEjecutar.setEnabled(true);
            }
        } else {
            parametrosSCH.setVisible(false);
            parametrosSHMM.setVisible(false);
            parametrosSHMP.setVisible(false);
            parametrosLinKerninghan.setVisible(false);
            panelVacio.setVisible(true);
            algoritmoSeleccionado = null;
            btnEjecutar.setEnabled(false);
        }
    }//GEN-LAST:event_desplegableActionPerformed

    private void cargarSolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarSolucionActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            solucion = selectedFile.getAbsolutePath();
        }

        if (solucion != null) {
            leerSolucion();
        }
    }//GEN-LAST:event_cargarSolucionActionPerformed

    private void leerSolucion() {
        jLabel25.setText("");

        File pdfFile = new File(solucion);

        PDDocument document = null;

        try {

            document = PDDocument.load(pdfFile);

            PDFTextStripper textStripper = new PDFTextStripper();

            String contenidoPDF = textStripper.getText(document);

            String[] lineas = contenidoPDF.split("\\r?\\n");

            String algoritmo = lineas[0].split(" ")[1];

            String rutaRelativa = lineas[1].substring(lineas[1].lastIndexOf("\\") + 1, lineas[1].length() - 1);

            int i = 2;

            while (!lineas[i].trim().equalsIgnoreCase("La mejor solución encontrada es:")) {
                i++;
            }

            i++;

            String linea = "";

            while (!lineas[i].contains("Coste:")) {
                linea += lineas[i++];
            }

            linea = linea.replace("[", "");
            linea = linea.replace("]", "");

            String[] split = linea.split(" ");

            solucionEncontrada = new ArrayList();

            for (int j = 0; j < split.length; j++) {
                int ciudad = Integer.valueOf(split[j].replace(",", ""));
                ciudad -= 1;
                solucionEncontrada.add(ciudad);
            }

            hormiga = new Hormiga();

            hormiga.setSolucion(solucionEncontrada);

            jLabel80.setText("Solución de " + algoritmo + " con " + rutaRelativa + ": " + hormiga.primerasCiudades());

            jLabel81.setText(lineas[i++]);

            while (!lineas[i].trim().equalsIgnoreCase("Información sobre la ubicación de las ciudades:")) {
                i++;
            }

            i++;

            int tam = Integer.valueOf(lineas[i++].trim());

            double[][] ciudades = new double[tam][2];

            while (i < lineas.length && !lineas[i].trim().equalsIgnoreCase("Matriz de heurísticas:") && !lineas[i].isBlank()) {//cambiar esto se ha añadido la heuristica
                int j = 0;
                String[] split2 = lineas[i].split(" ");
                ciudades[Integer.parseInt(split2[0]) - 1][j++] = Double.parseDouble(split2[1]);
                ciudades[Integer.parseInt(split2[0]) - 1][j] = Double.parseDouble(split2[2]);
                i++;
            }

            if (datosCiudades == null) {
                datosCiudades = new LectorDatos();
            }

            datosCiudades.setCiudades(ciudades);

            pantallaInicial.setVisible(false);

            pantallaVisualizacion.setVisible(true);

            dibujarPuntos();

            panel.repaint();
        } catch (Exception e) {
            jLabel25.setText("El informe seleccionado no pertenece a este sistema");
        } finally {
            if (document != null) {
                try {
                    document.close();
                } catch (IOException ex) {
                }
            }
        }

        solucion = null;

    }

    private void datosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datosActionPerformed
        jLabel25.setText("");

        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if (!selectedFile.getAbsolutePath().isBlank()) {
                conjuntoDatos = selectedFile.getAbsolutePath();
                try {
                    datosCiudades = new LectorDatos(conjuntoDatos);
                    if (algoritmoSeleccionado != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank() && jLabel92.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                } catch (Exception ex) {
                    conjuntoDatos = null;
                    btnEjecutar.setEnabled(false);
                    jLabel25.setText("El formato del conjunto de datos seleccionado no es el esperado");
                }
            }
        }
    }//GEN-LAST:event_datosActionPerformed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        if (jTextField2.getText().isBlank()) {
            jLabel15.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel15.setText("");
            try {
                int iteraciones = Integer.parseInt(jTextField2.getText());
                if (iteraciones <= 0) {
                    jLabel15.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setNumIteraciones(iteraciones);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel92.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel15.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyReleased
        if (jTextField3.getText().isBlank()) {
            jLabel14.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel14.setText("");
            try {
                int segundos = Integer.parseInt(jTextField3.getText());
                if (segundos <= 0) {
                    jLabel14.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setEjecucionS(segundos);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel92.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel14.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField3KeyReleased

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        if (jTextField4.getText().isBlank()) {
            jLabel16.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel16.setText("");
            try {
                int tamanio = Integer.parseInt(jTextField4.getText());
                if (tamanio <= 0) {
                    jLabel16.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setTamPoblacion(tamanio);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel16.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField4KeyReleased

    private void jTextField5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyReleased
        if (jTextField5.getText().isBlank()) {
            jLabel17.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel17.setText("");
            try {
                int alfa = Integer.parseInt(jTextField5.getText());
                if (alfa <= 0) {
                    jLabel17.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setAlfa(alfa);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel92.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel17.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField5KeyReleased

    private void jTextField6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyReleased
        if (jTextField6.getText().isBlank()) {
            jLabel18.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel18.setText("");
            try {
                int beta = Integer.parseInt(jTextField6.getText());
                if (beta <= 0) {
                    jLabel18.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setBeta(beta);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel92.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel18.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField6KeyReleased

    private void jTextField7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyReleased
        if (jTextField7.getText().isBlank()) {
            jLabel19.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel19.setText("");
            try {
                double q0 = Double.parseDouble(jTextField7.getText());
                if (q0 < 0 || q0 > 1) {
                    jLabel19.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setQ0(q0);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel19.setText("Valor real entre 0 y 1");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField7KeyReleased

    private void jTextField8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyReleased
        if (jTextField8.getText().isBlank()) {
            jLabel20.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel20.setText("");
            try {
                double actGlobal = Double.parseDouble(jTextField8.getText());
                if (actGlobal < 0 || actGlobal > 1) {
                    jLabel20.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setActualizacionGlobalFeromona(actGlobal);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel92.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel20.setText("Valor real entre 0 y 1");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField8KeyReleased

    private void jTextField9KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField9KeyReleased
        if (jTextField9.getText().isBlank()) {
            jLabel21.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel21.setText("");
            try {
                double actLocal = Double.parseDouble(jTextField9.getText());
                if (actLocal < 0 || actLocal > 1) {
                    jLabel21.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setActualizacionLocalFeromona(actLocal);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel92.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel21.setText("Valor real entre 0 y 1");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField9KeyReleased

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if (jTextField1.getText().isBlank()) {
            jLabel13.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel13.setText("");
            try {
                double feromonaInicial = Double.parseDouble(jTextField1.getText());
                if (feromonaInicial <= 0) {
                    jLabel13.setText("Valor real positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setValorInicialMatrizFeromona(feromonaInicial);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel92.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel13.setText("Valor real positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField10KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField10KeyReleased
        jLabel23.setText("");
        if (!jTextField10.getText().isBlank()) {
            try {
                semilla = Long.parseLong(jTextField10.getText());
                if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                        && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                        && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                        && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel92.getText().isBlank()
                        && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                        && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                        && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                        && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                        && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                        && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                        && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                        && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                        && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                        && jLabel90.getText().isBlank()) {
                    btnEjecutar.setEnabled(true);
                }
            } catch (NumberFormatException e) {
                jLabel23.setText("Valor entero largo");
                btnEjecutar.setEnabled(false);
                semilla = null;
            }
        } else {
            semilla = null;
            if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                    && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                    && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                    && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel92.getText().isBlank()
                    && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                    && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                    && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                    && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                    && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                    && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                    && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                    && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                    && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                    && jLabel90.getText().isBlank()) {
                btnEjecutar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jTextField10KeyReleased

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (parametrosConfiguracion != null) {
            String seleccion = (String) jComboBox1.getSelectedItem();
            parametrosConfiguracion.setHormigaAportante(seleccion);
            if (seleccion.equals("Ambas")) {
                jLabel31.setText("% iteraciones aporta gb");
                jTextField11.setVisible(true);
                jTextField11.setText(String.valueOf(parametrosConfiguracion.getPorcentajeItMejorGlobal()));
                jLabel24.setText("% reducción iteraciones");
                jTextField35.setVisible(true);
                jTextField35.setText(String.valueOf(parametrosConfiguracion.getRedPorcItMejorGlobal()));
            } else {
                leerParametros(false);
                jLabel31.setText("");
                jLabel24.setText("");
                jTextField11.setVisible(false);
                jTextField35.setVisible(false);
                jLabel32.setText("");
                jLabel84.setText("");
                if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel14.getText().isBlank() && jLabel15.getText().isBlank()
                        && jLabel16.getText().isBlank() && jLabel17.getText().isBlank() && jLabel18.getText().isBlank()
                        && jLabel19.getText().isBlank() && jLabel20.getText().isBlank() && jLabel21.getText().isBlank()
                        && jLabel13.getText().isBlank() && jLabel23.getText().isBlank()) {
                    btnEjecutar.setEnabled(true);
                }
            }
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void detenerEjecucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detenerEjecucionActionPerformed
        if (detenerEjecucion.getText().equals("Detener")) {
            ejecutor.shutdown();

            try {
                if (!ejecutor.awaitTermination(1, TimeUnit.SECONDS)) {
                    ejecutor.shutdownNow();
                }
            } catch (InterruptedException e) {
            }

            detenerEjecucion.setText("Generar Informe");
        } else {
            pantallaEjecucion.setVisible(false);
            parametrosSCH.setVisible(false);
            parametrosSHMM.setVisible(false);
            parametrosSHMP.setVisible(false);
            panelVacio.setVisible(true);
            pantallaInicial.setVisible(true);
            desplegable.setSelectedIndex(0);
            algoritmoSeleccionado = null;
            conjuntoDatos = null;
            detenerEjecucion.setText("Detener");
            try {
                cdl.await();
            } catch (InterruptedException ex) {
            }
            panel.setVisible(false);
            panel = null;
            guardarFichero();
        }
    }//GEN-LAST:event_detenerEjecucionActionPerformed

    private void jLabel29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MouseClicked
        JFrame frame = new JFrame("Ventana Principal");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 300);

        JDialog dialogo = new JDialog(frame, "Solución encontrada", true);

        JTextArea etiqueta = new JTextArea(hormiga.toString());
        etiqueta.setEditable(false);

        // Envuelve el JTextArea en un JScrollPane
        JScrollPane scrollPane = new JScrollPane(etiqueta);
        dialogo.add(scrollPane);

        dialogo.setSize(500, 200);

        dialogo.setVisible(true);
    }//GEN-LAST:event_jLabel29MouseClicked

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        JFrame frame = new JFrame("Ventana Principal");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 300);

        JDialog dialogo = new JDialog(frame, "Solución encontrada", true);

        JTextArea etiqueta = new JTextArea(hormiga.toString());
        etiqueta.setEditable(false);

        // Envuelve el JTextArea en un JScrollPane
        JScrollPane scrollPane = new JScrollPane(etiqueta);
        dialogo.add(scrollPane);

        dialogo.setSize(500, 200);

        dialogo.setVisible(true);
    }//GEN-LAST:event_jLabel27MouseClicked

    private void jTextField11KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField11KeyReleased
        if (jTextField11.getText().isBlank()) {
            jLabel32.setText("Valor obligatorio");
            parametrosConfiguracion.setPorcentajeItMejorGlobal(-1);
            if (!jTextField35.getText().isBlank()) {
                jLabel84.setText("");
            }
            btnEjecutar.setEnabled(false);
        } else {
            jLabel32.setText("");
            try {
                double porcIteracionesMejorGlobal = Double.parseDouble(jTextField11.getText());
                parametrosConfiguracion.setPorcentajeItMejorGlobal(porcIteracionesMejorGlobal);
                if (porcIteracionesMejorGlobal < 0 || porcIteracionesMejorGlobal < parametrosConfiguracion.getRedPorcItMejorGlobal()) {
                    jLabel32.setText("Valor >= a % reducción iteraciones");
                    if (!jTextField35.getText().isBlank()) {
                        jLabel84.setText("Valor <= a % iteraciones aporta gb");
                    }
                    btnEjecutar.setEnabled(false);
                } else {
                    jLabel84.setText("");
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel35.getText().isBlank() && jLabel90.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel32.setText("Valor >= a % reducción iteraciones");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField11KeyReleased

    private void jTextField12KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField12KeyReleased
        if (jTextField12.getText().isBlank()) {
            jLabel39.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel39.setText("");
            try {
                int iteraciones = Integer.parseInt(jTextField12.getText());
                if (iteraciones <= 0) {
                    jLabel39.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setNumIteraciones(iteraciones);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel92.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel39.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField12KeyReleased

    private void jTextField13KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField13KeyReleased
        if (jTextField13.getText().isBlank()) {
            jLabel40.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel40.setText("");
            try {
                int segundos = Integer.parseInt(jTextField13.getText());
                if (segundos <= 0) {
                    jLabel40.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setEjecucionS(segundos);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel92.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel40.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField13KeyReleased

    private void jTextField14KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField14KeyReleased
        if (jTextField14.getText().isBlank()) {
            jLabel51.setText("Valor obligatorio");
            parametrosConfiguracion.setPorcentajeItMejorGlobal(-1);
            if (!jTextField35.getText().isBlank()) {
                jLabel92.setText("");
            }
            btnEjecutar.setEnabled(false);
        } else {
            jLabel51.setText("");
            try {
                double porcIteracionesMejorGlobal = Double.parseDouble(jTextField14.getText());
                parametrosConfiguracion.setPorcentajeItMejorGlobal(porcIteracionesMejorGlobal);
                if (porcIteracionesMejorGlobal < 0 || porcIteracionesMejorGlobal < parametrosConfiguracion.getRedPorcItMejorGlobal()) {
                    jLabel51.setText("Valor >= a % reducción iteraciones");
                    if (!jTextField39.getText().isBlank()) {
                        jLabel92.setText("Valor <= a % iteraciones aporta gb");
                    }
                    btnEjecutar.setEnabled(false);
                } else {
                    jLabel92.setText("");
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel90.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel51.setText("Valor >= a % reducción iteraciones");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField14KeyReleased

    private void jTextField16KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField16KeyReleased
        if (jTextField16.getText().isBlank()) {
            jLabel52.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel52.setText("");
            try {
                int alfa = Integer.parseInt(jTextField16.getText());
                if (alfa <= 0) {
                    jLabel52.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setAlfa(alfa);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel92.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel52.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField16KeyReleased

    private void jTextField17KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField17KeyReleased
        if (jTextField17.getText().isBlank()) {
            jLabel53.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel53.setText("");
            try {
                int beta = Integer.parseInt(jTextField17.getText());
                if (beta <= 0) {
                    jLabel53.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setBeta(beta);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel53.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField17KeyReleased

    private void jTextField18KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField18KeyReleased
        if (jTextField18.getText().isBlank()) {
            jLabel55.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel55.setText("");
            try {
                double porcItReinicializacion = Double.parseDouble(jTextField18.getText());
                if (porcItReinicializacion < 0 || porcItReinicializacion > 1) {
                    jLabel55.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setPorcentajeIteracionesEstancamiento(porcItReinicializacion);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel92.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel55.setText("Valor real positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField18KeyReleased

    private void jTextField20KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField20KeyReleased
        if (jTextField20.getText().isBlank()) {
            jLabel56.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel56.setText("");
            try {
                double actFeromona = Double.parseDouble(jTextField20.getText());
                if (actFeromona < 0 || actFeromona > 1) {
                    jLabel56.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setActualizacionGlobalFeromona(actFeromona);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel56.setText("Valor real positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField20KeyReleased

    private void jTextField21KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField21KeyReleased
        if (jTextField21.getText().isBlank()) {
            jLabel35.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel35.setText("");
            try {
                int itConvergencia = Integer.parseInt(jTextField21.getText());
                if (itConvergencia <= 0) {
                    jLabel35.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setIteracionesConvergencia(itConvergencia);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel35.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField21KeyReleased

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        String seleccion = (String) jComboBox2.getSelectedItem();
        parametrosConfiguracion.setHormigaAportante(seleccion);
        if (seleccion.equals("Ambas")) {
            jLabel45.setText("% iteraciones aporta gb");
            jTextField14.setVisible(true);
            jTextField14.setText(String.valueOf(parametrosConfiguracion.getPorcentajeItMejorGlobal()));
            jLabel91.setText("% reducción iteraciones");
            jTextField39.setVisible(true);
            jTextField39.setText(String.valueOf(parametrosConfiguracion.getRedPorcItMejorGlobal()));
        } else {
            leerParametros(false);
            jLabel51.setText("");
            jLabel92.setText("");
            jTextField14.setVisible(false);
            jTextField39.setVisible(false);
            jLabel45.setText("");
            jLabel91.setText("");
            if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel35.getText().isBlank() && jLabel39.getText().isBlank()
                    && jLabel40.getText().isBlank() && jLabel54.getText().isBlank() && jLabel55.getText().isBlank()
                    && jLabel56.getText().isBlank() && jLabel57.getText().isBlank() && jLabel58.getText().isBlank()
                    && jLabel59.getText().isBlank()) {
                btnEjecutar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextField24KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField24KeyReleased
        if (jTextField24.getText().isBlank()) {
            jLabel50.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel50.setText("");
            try {
                double pBest = Double.parseDouble(jTextField24.getText());
                if (pBest < 0 || pBest > 1) {
                    jLabel50.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setPbest(pBest);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel50.setText("Valor real positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField24KeyReleased

    private void jTextField19KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField19KeyReleased
        jLabel54.setText("");
        if (!jTextField19.getText().isBlank()) {
            try {
                semilla = Long.parseLong(jTextField19.getText());
                if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                        && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                        && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                        && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                        && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                        && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                        && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                        && jLabel92.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                        && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                        && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                        && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                        && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                        && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                        && jLabel90.getText().isBlank()) {
                    btnEjecutar.setEnabled(true);
                }
            } catch (NumberFormatException e) {
                jLabel54.setText("Valor entero largo");
                btnEjecutar.setEnabled(false);
                semilla = null;
            }
        } else {
            semilla = null;
            if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                    && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                    && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                    && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                    && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                    && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                    && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                    && jLabel92.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                    && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                    && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                    && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                    && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                    && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                    && jLabel90.getText().isBlank()) {
                btnEjecutar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jTextField19KeyReleased

    private void jTextField25KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField25KeyReleased
        if (jTextField25.getText().isBlank()) {
            jLabel57.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel57.setText("");
            try {
                int tamanio = Integer.parseInt(jTextField25.getText());
                if (tamanio <= 0) {
                    jLabel57.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setTamPoblacion(tamanio);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel92.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel57.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField25KeyReleased

    private void jTextField26KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField26KeyReleased
        if (jTextField26.getText().isBlank()) {
            jLabel58.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel58.setText("");
            try {
                Double factConvergencia = Double.parseDouble(jTextField26.getText());
                if (factConvergencia < 0 || factConvergencia > 1) {
                    jLabel58.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setPorcConvergencia(factConvergencia);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel92.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel58.setText("Valor real entre 0 y 1");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField26KeyReleased

    private void jTextField27KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField27KeyReleased
        if (jTextField27.getText().isBlank()) {
            jLabel59.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel59.setText("");
            try {
                Double coefSuavizado = Double.parseDouble(jTextField27.getText());
                if (coefSuavizado < 0 || coefSuavizado > 1) {
                    jLabel59.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setCoeficienteSuavizado(coefSuavizado);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel59.setText("Valor real entre 0 y 1");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField27KeyReleased

    private void checkbox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox2MouseClicked
        if (jLabel46.getText().isBlank()) {
            jTextField18.setVisible(true);
            jTextField18.setText(String.valueOf(parametrosConfiguracion.getPorcentajeIteracionesEstancamiento()));
            jLabel46.setText("% iteraciones");
        } else {
            jTextField18.setVisible(false);
            jLabel46.setText("");
            jLabel55.setText("");
        }
    }//GEN-LAST:event_checkbox2MouseClicked

    private void checkbox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox1MouseClicked
        if (jLabel38.getText().isBlank() && jLabel48.getText().isBlank() && jLabel49.getText().isBlank()) {
            jTextField26.setVisible(true);
            jTextField27.setVisible(true);
            jTextField21.setVisible(true);
            jTextField26.setText(String.valueOf(parametrosConfiguracion.getPorcConvergencia()));
            jTextField27.setText(String.valueOf(parametrosConfiguracion.getCoeficienteSuavizado()));
            jTextField21.setText(String.valueOf(parametrosConfiguracion.getIteracionesConvergencia()));
            jLabel38.setText("Factor convergencia");
            jLabel48.setText("Coeficiente de suavizado");
            jLabel49.setText("Iteraciones para comprobar convergencia");
        } else {
            jTextField26.setVisible(false);
            jTextField27.setVisible(false);
            jTextField21.setVisible(false);
            jLabel38.setText("");
            jLabel48.setText("");
            jLabel49.setText("");
            jLabel35.setText("");
            jLabel58.setText("");
            jLabel59.setText("");
        }
    }//GEN-LAST:event_checkbox1MouseClicked

    private void jTextField15KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField15KeyReleased
        if (jTextField15.getText().isBlank()) {
            jLabel73.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel73.setText("");
            try {
                int tamanio = Integer.parseInt(jTextField15.getText());
                if (tamanio <= 0) {
                    jLabel73.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setTamPoblacion(tamanio);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel92.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel73.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField15KeyReleased

    private void jTextField22KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField22KeyReleased
        if (jTextField22.getText().isBlank()) {
            jLabel71.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel71.setText("");
            try {
                int iteraciones = Integer.parseInt(jTextField22.getText());
                if (iteraciones <= 0) {
                    jLabel71.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setNumIteraciones(iteraciones);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel92.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel71.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField22KeyReleased

    private void jTextField23KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField23KeyReleased
        if (jTextField23.getText().isBlank()) {
            jLabel72.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel72.setText("");
            try {
                int segundos = Integer.parseInt(jTextField23.getText());
                if (segundos <= 0) {
                    jLabel72.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setEjecucionS(segundos);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel72.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField23KeyReleased

    private void jTextField28KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField28KeyReleased
        if (jTextField28.getText().isBlank()) {
            jLabel77.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel77.setText("");
            try {
                double feromonaInicial = Double.parseDouble(jTextField28.getText());
                if (feromonaInicial <= 0) {
                    jLabel77.setText("Valor real positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setValorInicialMatrizFeromona(feromonaInicial);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel92.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel77.setText("Valor real positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField28KeyReleased

    private void jTextField29KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField29KeyReleased
        if (jTextField29.getText().isBlank()) {
            jLabel74.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel74.setText("");
            try {
                int alfa = Integer.parseInt(jTextField29.getText());
                if (alfa <= 0) {
                    jLabel74.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setAlfa(alfa);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel92.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel74.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField29KeyReleased

    private void jTextField30KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField30KeyReleased
        jLabel76.setText("");
        if (!jTextField30.getText().isBlank()) {
            try {
                semilla = Long.parseLong(jTextField30.getText());
                if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                        && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                        && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                        && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                        && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                        && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                        && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                        && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                        && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                        && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                        && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                        && jLabel92.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                        && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                        && jLabel90.getText().isBlank()) {
                    btnEjecutar.setEnabled(true);
                }
            } catch (NumberFormatException e) {
                jLabel76.setText("Valor entero largo");
                btnEjecutar.setEnabled(false);
                semilla = null;
            }
        } else {
            semilla = null;
            if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                    && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                    && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                    && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                    && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                    && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                    && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                    && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                    && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                    && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                    && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                    && jLabel92.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                    && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                    && jLabel90.getText().isBlank()) {
                btnEjecutar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jTextField30KeyReleased

    private void jTextField31KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField31KeyReleased
        if (jTextField31.getText().isBlank()) {
            jLabel70.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel70.setText("");
            try {
                double porcItReinicializacion = Double.parseDouble(jTextField31.getText());
                if (porcItReinicializacion < 0 || porcItReinicializacion > 1) {
                    jLabel70.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setPorcentajeIteracionesEstancamiento(porcItReinicializacion);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel92.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel70.setText("Valor real positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField31KeyReleased

    private void jTextField32KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField32KeyReleased
        if (jTextField32.getText().isBlank()) {
            jLabel78.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel78.setText("");
            try {
                double actFeromona = Double.parseDouble(jTextField32.getText());
                if (actFeromona < 0 || actFeromona > 1) {
                    jLabel78.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setActualizacionGlobalFeromona(actFeromona);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel78.setText("Valor real positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField32KeyReleased

    private void jTextField33KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField33KeyReleased
        if (jTextField33.getText().isBlank()) {
            jLabel79.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel79.setText("");
            try {
                double pm = Double.parseDouble(jTextField33.getText());
                if (pm < 0 || pm > 1) {
                    jLabel79.setText("Valor real entre 0 y 1");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setPm(pm);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel92.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel79.setText("Valor real positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField33KeyReleased

    private void checkbox3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkbox3MouseClicked
        if (jLabel62.getText().isBlank()) {
            jTextField31.setVisible(true);
            jTextField18.setText(String.valueOf(parametrosConfiguracion.getPorcentajeIteracionesEstancamiento()));
            jLabel62.setText("% iteraciones estancado");
        } else {
            jTextField31.setVisible(false);
            jLabel62.setText("");
            jLabel70.setText("");
        }
    }//GEN-LAST:event_checkbox3MouseClicked

    private void jTextField34KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField34KeyReleased
        if (jTextField34.getText().isBlank()) {
            jLabel75.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel75.setText("");
            try {
                int beta = Integer.parseInt(jTextField34.getText());
                if (beta <= 0) {
                    jLabel75.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setBeta(beta);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel75.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField34KeyReleased

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        pantallaVisualizacion.setVisible(false);
        panel.setVisible(false);
        panel = null;
        parametrosSCH.setVisible(false);
        parametrosSHMM.setVisible(false);
        parametrosSHMP.setVisible(false);
        panelVacio.setVisible(true);
        desplegable.setSelectedIndex(0);
        algoritmoSeleccionado = null;
        conjuntoDatos = null;
        pantallaInicial.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void jLabel80MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel80MouseClicked
        JFrame frame = new JFrame("Ventana Principal");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 300);

        JDialog dialogo = new JDialog(frame, "Solución encontrada", true);

        JTextArea etiqueta = new JTextArea(hormiga.toString());
        etiqueta.setEditable(false);
        dialogo.add(etiqueta);

        dialogo.setSize(500, 200);

        dialogo.setVisible(true);
    }//GEN-LAST:event_jLabel80MouseClicked

    private void jTextField35KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField35KeyReleased
        if (jTextField35.getText().isBlank()) {
            jLabel84.setText("Valor obligatorio");
            parametrosConfiguracion.setRedPorcItMejorGlobal(2);
            if (!jTextField11.getText().isBlank()) {
                jLabel32.setText("");
            }
            btnEjecutar.setEnabled(false);
        } else {
            jLabel84.setText("");
            try {
                double porcRedIteraciones = Double.parseDouble(jTextField35.getText());
                parametrosConfiguracion.setRedPorcItMejorGlobal(porcRedIteraciones);
                if (porcRedIteraciones < 0 || porcRedIteraciones > parametrosConfiguracion.getPorcentajeItMejorGlobal()) {
                    if (!jTextField11.getText().isBlank()) {
                        jLabel32.setText("Valor >= a % reducción iteraciones");
                    }
                    jLabel84.setText("Valor <= a % iteraciones aporta gb");
                    btnEjecutar.setEnabled(false);
                } else {
                    jLabel32.setText("");
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel90.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel84.setText("Valor <= a % iteraciones aporta gb");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField35KeyReleased

    private void jTextField36KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField36KeyReleased
        if (jTextField36.getText().isBlank()) {
            jLabel85.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel85.setText("");
            try {
                int iteraciones = Integer.parseInt(jTextField36.getText());
                if (iteraciones <= 0) {
                    jLabel85.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setNumIteraciones(iteraciones);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel92.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel15.getText().isBlank() && jLabel87.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel85.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField36KeyReleased

    private void jTextField37KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField37KeyReleased
        if (jTextField37.getText().isBlank()) {
            jLabel87.setText("Valor obligatorio");
            btnEjecutar.setEnabled(false);
        } else {
            jLabel87.setText("");
            try {
                int segundos = Integer.parseInt(jTextField37.getText());
                if (segundos <= 0) {
                    jLabel87.setText("Valor entero positivo");
                    btnEjecutar.setEnabled(false);
                } else {
                    parametrosConfiguracion.setEjecucionS(segundos);
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel92.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel90.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel87.setText("Valor entero positivo");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField37KeyReleased

    private void jTextField38KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField38KeyReleased
        jLabel90.setText("");
        if (!jTextField38.getText().isBlank()) {
            try {
                semilla = Long.parseLong(jTextField38.getText());
                if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                        && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                        && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                        && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel92.getText().isBlank()
                        && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                        && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                        && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                        && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                        && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                        && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                        && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                        && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                        && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                        && jLabel23.getText().isBlank()) {
                    btnEjecutar.setEnabled(true);
                }
            } catch (NumberFormatException e) {
                jLabel90.setText("Valor entero largo");
                btnEjecutar.setEnabled(false);
                semilla = null;
            }
        } else {
            semilla = null;
            if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                    && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                    && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                    && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel92.getText().isBlank()
                    && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                    && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                    && jLabel51.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                    && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                    && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                    && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                    && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                    && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                    && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()
                    && jLabel23.getText().isBlank()) {
                btnEjecutar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jTextField38KeyReleased

    private void jTextField39KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField39KeyReleased
        if (jTextField39.getText().isBlank()) {
            jLabel92.setText("Valor obligatorio");
            parametrosConfiguracion.setRedPorcItMejorGlobal(2);
            if (!jTextField11.getText().isBlank()) {
                jLabel51.setText("");
            }
            btnEjecutar.setEnabled(false);
        } else {
            jLabel92.setText("");
            try {
                double porcRedIteraciones = Double.parseDouble(jTextField39.getText());
                parametrosConfiguracion.setRedPorcItMejorGlobal(porcRedIteraciones);
                if (porcRedIteraciones < 0 || porcRedIteraciones > parametrosConfiguracion.getPorcentajeItMejorGlobal()) {
                    if (!jTextField35.getText().isBlank()) {
                        jLabel51.setText("Valor >= a % reducción iteraciones");
                    }
                    jLabel92.setText("Valor <= a % iteraciones aporta gb");
                    btnEjecutar.setEnabled(false);
                } else {
                    jLabel51.setText("");
                    if (algoritmoSeleccionado != null && conjuntoDatos != null && jLabel13.getText().isBlank()
                            && jLabel14.getText().isBlank() && jLabel15.getText().isBlank() && jLabel16.getText().isBlank()
                            && jLabel17.getText().isBlank() && jLabel18.getText().isBlank() && jLabel19.getText().isBlank()
                            && jLabel20.getText().isBlank() && jLabel21.getText().isBlank() && jLabel23.getText().isBlank()
                            && jLabel32.getText().isBlank() && jLabel84.getText().isBlank() && jLabel35.getText().isBlank()
                            && jLabel39.getText().isBlank() && jLabel40.getText().isBlank() && jLabel50.getText().isBlank()
                            && jLabel90.getText().isBlank() && jLabel52.getText().isBlank() && jLabel53.getText().isBlank()
                            && jLabel54.getText().isBlank() && jLabel55.getText().isBlank() && jLabel56.getText().isBlank()
                            && jLabel57.getText().isBlank() && jLabel58.getText().isBlank() && jLabel59.getText().isBlank()
                            && jLabel70.getText().isBlank() && jLabel71.getText().isBlank() && jLabel72.getText().isBlank()
                            && jLabel73.getText().isBlank() && jLabel74.getText().isBlank() && jLabel75.getText().isBlank()
                            && jLabel76.getText().isBlank() && jLabel77.getText().isBlank() && jLabel78.getText().isBlank()
                            && jLabel79.getText().isBlank() && jLabel85.getText().isBlank() && jLabel87.getText().isBlank()) {
                        btnEjecutar.setEnabled(true);
                    }
                }
            } catch (NumberFormatException e) {
                jLabel92.setText("Valor <= a % iteraciones aporta gb");
                btnEjecutar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextField39KeyReleased

    public void mostrarSolucion(Hormiga hormiga) {
        this.hormiga = hormiga;
        jLabel27.setText("Mejor solución encontrada hasta el momento: " + hormiga.primerasCiudades());
        jLabel28.setText("Coste: " + hormiga.getCoste());
        panel.repaint();
    }

    public void terminadaEjecucion(Hormiga hormiga) {
        this.hormiga = hormiga;
        jPanel10.setVisible(false);
        jPanel9.setVisible(true);
        String rutaRelativa = conjuntoDatos.substring(conjuntoDatos.lastIndexOf("\\") + 1, conjuntoDatos.length());
        jLabel29.setText("Solución de " + algoritmoSeleccionado + " con " + rutaRelativa + ": " + hormiga.primerasCiudades());
        jLabel30.setText("Coste: " + hormiga.getCoste());
        detenerEjecucion.setText("Generar Informe");
    }

    private void dibujarPuntos() {
        panel = new Panel();

        Border borde = LineBorder.createBlackLineBorder();
        panel.setBorder(borde);
        panel.setBackground(Color.white);
        panel.setSize(1388, 490);
        panel.setPreferredSize(new Dimension(1388, 490));
        panel.setLocation(10, 150);

        add(panel);
    }

    private void leerParametros(boolean cambiaAlgoritmo) {
        parametrosConfiguracion = lectores.get(algoritmoSeleccionado);
        parametrosConfiguracion.leerParametros();
        if (cambiaAlgoritmo) {
            parametrosConfiguracion.mostrarParametros();
        }
    }

    public void setLog(StringBuilder log) {
        this.log = log;
    }

    public void jTextField2setText(String text) {
        jTextField2.setText(text);
    }

    public void jTextField3setText(String text) {
        jTextField3.setText(text);
    }

    public void jTextField4setText(String text) {
        jTextField4.setText(text);
    }

    public void jTextField5setText(String text) {
        jTextField5.setText(text);
    }

    public void jTextField6setText(String text) {
        jTextField6.setText(text);
    }

    public void jTextField7setText(String text) {
        jTextField7.setText(text);
    }

    public void jTextField8setText(String text) {
        jTextField8.setText(text);
    }

    public void jTextField9setText(String text) {
        jTextField9.setText(text);
    }

    public void jTextField1setText(String text) {
        jTextField1.setText(text);
    }

    public void jTextField11setText(String text) {
        jTextField11.setText(text);
    }

    public void jTextField35setText(String text) {
        jTextField35.setText(text);
    }

    public void jTextField12setText(String text) {
        jTextField12.setText(text);
    }

    public void jTextField13setText(String text) {
        jTextField13.setText(text);
    }

    public void jTextField24setText(String text) {
        jTextField24.setText(text);
    }

    public void jTextField39setText(String text) {
        jTextField39.setText(text);
    }

    public void jTextField14setText(String text) {
        jTextField14.setText(text);
    }

    public void jTextField16setText(String text) {
        jTextField16.setText(text);
    }

    public void jTextField17setText(String text) {
        jTextField17.setText(text);
    }

    public void jTextField18setText(String text) {
        jTextField18.setText(text);
    }

    public void jTextField20setText(String text) {
        jTextField20.setText(text);
    }

    public void jTextField25setText(String text) {
        jTextField25.setText(text);
    }

    public void jTextField26setText(String text) {
        jTextField26.setText(text);
    }

    public void jTextField27setText(String text) {
        jTextField27.setText(text);
    }

    public void jTextField21setText(String text) {
        jTextField21.setText(text);
    }

    public void jTextField22setText(String text) {
        jTextField22.setText(text);
    }

    public void jTextField23setText(String text) {
        jTextField23.setText(text);
    }

    public void jTextField15setText(String text) {
        jTextField15.setText(text);
    }

    public void jTextField29setText(String text) {
        jTextField29.setText(text);
    }

    public void jTextField34setText(String text) {
        jTextField34.setText(text);
    }

    public void jTextField31setText(String text) {
        jTextField31.setText(text);
    }

    public void jTextField32setText(String text) {
        jTextField32.setText(text);
    }

    public void jTextField28setText(String text) {
        jTextField28.setText(text);
    }

    public void jTextField33setText(String text) {
        jTextField33.setText(text);
    }

    public void jTextField36setText(String text) {
        jTextField36.setText(text);
    }

    public void jTextField37setText(String text) {
        jTextField37.setText(text);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEjecutar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JButton cargarSolucion;
    private java.awt.Checkbox checkbox1;
    private java.awt.Checkbox checkbox2;
    private java.awt.Checkbox checkbox3;
    private javax.swing.JButton datos;
    private javax.swing.JComboBox<String> desplegable;
    private javax.swing.JButton detenerEjecucion;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JPanel panelVacio;
    private javax.swing.JPanel pantallaEjecucion;
    private javax.swing.JPanel pantallaInicial;
    private javax.swing.JPanel pantallaVisualizacion;
    private javax.swing.JPanel parametrosLinKerninghan;
    private javax.swing.JPanel parametrosSCH;
    private javax.swing.JPanel parametrosSHMM;
    private javax.swing.JPanel parametrosSHMP;
    // End of variables declaration//GEN-END:variables
}
